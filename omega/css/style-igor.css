/* Asterisco é um seletor universal 
Alterar o comportamento padrão do Box Model, essa linha precisa estar em qualquer projeto*/
*, *::before, *::after {box-sizing: border-box;}

html {
    font-size: 18px;
    scroll-behavior: smooth;
}

body { 
    background-image: url(../imagens/textura-fundo.png) ;
    font-family: 'Open Sans', Verdana, sans-serif; 
}

/* Tornando as imagens responsivas */
img {max-width: 100%;}

/* Reset em alguns elementos */
body,h1, h2, h3, p, figure {
    margin: 0;
    padding: 0;
}

/* Formantando todos os links */
a {
    text-decoration: none;
    color: black;
}

header, footer {
    text-align: center;
    background-color: rgba(128, 128, 128, 0.247);
}

header {
    border-bottom: solid 2px;
    margin-bottom: 10px;

}

footer { border-top: solid 1px;}

/* Aula 07 */

/* Regra para limitar o tamanho do conteúdo */
main {
    width: 95%;
    /* margin-left: auto; 
    margin-right: right;*/
    margin: 0 auto;   /*centralizar o bloco*/
}

/* p { 
    text-align: justify;
}
*/

/* Regra para cada área de conteúdo (article) contida no destaque */
article {
    background-color: white;
    padding: 2%;
    margin: 10px 0;
    box-shadow: black 1px 1px 5px;
}

h1 , h2, h3, nav, button {
    font-family: Orbitron, Verdana, sans-serif;
}

/* Regra em que é aplicado em espaçamento interno para cima e para baixo */
h2, h3, p { padding: 1% 0;}

/* Regra para diminuir o tamanho das imagens do rodapé */
footer img {
    width: 25px;
}

footer h2 {
    font-size: .9rem;
}

footer p {
    font-size: .7rem;
}

section, figure {
    margin: 2% 0;
}

figcaption {
    text-align: center;
    font-size: .8rem;
    font-weight: bold;
    margin-bottom: 10px;
}

/* Regras provisórias para ajustes e testes 

h1 { background-color: yellowgreen;}
h1 a { background-color: violet;}
nav { background-color: tomato;}
nav a {background-color: red;} */

/* Criar Flex Containers */

h1, h1 a, nav, nav a, .voltar-topo a {
    display: flex;
    justify-content: center;
    align-items: center;
    padding: 2px;
}

h1 {
    padding: 5px;

}

nav a {
    width: 33.33%;
    height: 50px;
    font-size: .9rem;
}

nav a:hover, nav a:focus {
    scale: 30%;
    background-color: black;
    color: white;
}

h1 img {
    width: 50px;
}

input, textarea {
    width: 100%; /*Sempre que não cabe o CSS vai jogar para baixo sozinho*/
    padding: 3%;
    border: solid 2px blue;
    font-size: 1.1rem;
    outline-color: chartreuse; /*linha adicional para destaque dos campos, ajuda bastante na acessibilidade */
    }

    label
    { font-weight: bold;
    text-transform: uppercase;
    }

    button {
        padding: 10px;
        width: 50%;
        background-color: black;
        color: white;
        font-size: 1.1rem;
            }

    button:hover, button:focus {
        background-color: darkblue;
        cursor: pointer /*troca o cursor do mouse para mãozinha*/
    }

    /* regra para deixar o link de voltar ao topo em posição fixa, e na parte de baixo e à direita da tela */
.voltar-topo {
    background-color: white;
    position: fixed;
    right: 0;
    bottom: 0;
    width: 40px;
    height: 40px;


}

.voltar-topo a:hover, a:focus {
    background-color: darkorange;
    color: black;
}




/* AULA 08 */
/* Regras para telas maiores: Media Queries/Breakpoints */

/* Breakpoint: telas a partir de 700px */
@media screen and (min-width: 700px) {
    /* Colocamos uma DIV com a classe container no HTML e nela aplicamos o flex para poder posicionar o logo/nome e o menu do cabeçalho lado a lado, além de adequar o tamanho ao mesmo valor usado no conteúdo (main) */
    header .container {
        display: flex;
        justify-content: space-between;
        width: 95%;
        margin: auto;
    }

     /* Ajustamos o tamanho das seções e figures
    para um valor que permita usar o layout de
    2 colunas */
    .grupo section, .grupo figure {
        width: 49%;
    }

    /* Adicionamos uma DIV com a classe grupo no HTML
    ao redor das seções e figures, e com isso usamos
    o flex para posicionar lado a lado. */
    .grupo {
        display: flex;
        flex-wrap: wrap;
        justify-content: space-between;
    }

    /* Breakpoint: telas a partir de 850px */
    @media screen and (min-width: 850px) {
        html { font-size: 20px;}
    }
      
    /* Breakpoint: telas a partir de 1000px */
    @media screen and (min-width: 1000px) {
        html { font-size:25px}
        h1 img { width: auto;}
        
        header {
            z-index:10;
            position: fixed;
            width: 100%;
            top: 0;
            background-color: rgb(182, 179, 179);
            }
/* Sempre que se usa position você quebra o fluxo do elemento, causando efeitos colaterais na página, que precisam ser corrigidos. */

/* Como o position: fixed no header fez com que o menu ficasse por cima do restate do conteúdo, usando a regra abaixo nós conseguimos copensar esse efeito colateral criando um espaçamento suficiente para evitar a sobreposição */
            #topo, #o-que-fazemos, #nossas-equipes, #contato {
                padding-top: 80px;
            }
            .voltar-topo { display: none}

            /* Criamos uma limitação quanto a largura máxima para a classe container. Na prática, limitamos o conteúdo do header e o conteúdo da main */
            .container { max-width: 1000px;}
  
        }

}

